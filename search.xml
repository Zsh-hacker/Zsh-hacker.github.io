<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>First article</title>
    <url>/2021/11/15/first/</url>
    <content><![CDATA[<p>欢迎到来LookFuture，本博客用来记录自己的学习过程及内容，慢慢进步，看向未来！</p>
<h2 id="个人简介"><a href="#个人简介" class="headerlink" title="个人简介"></a><strong>个人简介</strong></h2><p><strong>姓名：</strong>xxx</br><br><strong>性别：</strong>男</br><br><strong>邮箱：</strong><a href="mailto:&#50;&#x30;&#54;&#x38;&#57;&#x37;&#x31;&#x31;&#52;&#x36;&#x40;&#x71;&#113;&#46;&#99;&#111;&#109;">&#50;&#x30;&#54;&#x38;&#57;&#x37;&#x31;&#x31;&#52;&#x36;&#x40;&#x71;&#113;&#46;&#99;&#111;&#109;</a></br><br><strong>个人说明:</strong></br><br>  一名普通的大学生，希望不断提升自己，让人生更精彩！未来触不可及，追求 永不止步！</p>
]]></content>
  </entry>
  <entry>
    <title>导数公式</title>
    <url>/2021/11/16/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E5%AF%BC%E6%95%B0%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<h3 id="导数公式"><a href="#导数公式" class="headerlink" title="导数公式"></a>导数公式</h3><p><img src="https://pcsdata.baidu.com/thumbnail/d3f32a9f9r74bedd2bfbf674e9513dd6?fid=1727042680-16051585-742283165170920&rt=pr&sign=FDTAER-yUdy3dSFZ0SVxtzShv1zcMqd-sVsxk6Y8ZMihzDD+xjN7+Jdxhns=&expires=2h&chkv=0&chkbd=0&chkpc=&dp-logid=502558890666120499&dp-callid=0&time=1637071200&bus_no=26&size=c1600_u1600&quality=100&vuk=-&ft=video" alt="导数公式"></p>
<p><strong>三个三角函数</strong><br><img src="https://pcsdata.baidu.com/thumbnail/1f0bd1f99ifc56851896c98c6c52a3fa?fid=1727042680-16051585-813777247653744&rt=pr&sign=FDTAER-yUdy3dSFZ0SVxtzShv1zcMqd-JXDl/oXLv8btiXUxSRAUY6EvWUY=&expires=2h&chkv=0&chkbd=0&chkpc=&dp-logid=502768181102442708&dp-callid=0&time=1637071200&bus_no=26&size=c1600_u1600&quality=100&vuk=-&ft=video" alt="其他三角函数"></p>
]]></content>
      <categories>
        <category>高等数学</category>
      </categories>
  </entry>
  <entry>
    <title>约数个数</title>
    <url>/2021/11/15/%E5%8D%81%E4%B8%80%E5%B1%8A%E6%A0%A1%E9%80%89%E6%8B%94/%E7%BA%A6%E6%95%B0%E4%B8%AA%E6%95%B0/</url>
    <content><![CDATA[<p>【问题描述】<br>1200000有多少个约数（只计算正约数）。<br>【答案提交】<br>这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。<br><br><br></p>

<h3 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析：  "></a>问题分析：  <br></h3><p>  偶数至少有一个2能整除，所以，约数范围在2-600000之间，若能整除没有余数，则是约数，有余数则不是约数(<strong>注：</strong>所有数都能被自身整除)。</p>
<h3 id="算法设计"><a href="#算法设计" class="headerlink" title="算法设计:  "></a>算法设计:  <br></h3><p>  从2-600000一直与1200000取余，判断能整除则记录。</p>
<h3 id="程序实现："><a href="#程序实现：" class="headerlink" title="程序实现："></a>程序实现：</h3><pre><code>#include &lt;stdio.h&gt;
#define N 1200000    

int main()
&#123;
    int i, count;
    count = 0;
    
    for(i=2;i&lt;=N/2;i++)
    &#123;
        if(N%i==0)        //是约数就记录一次 
            count++;
    &#125;
    printf(&quot;%d&quot;, (count+1));
    return 0;
&#125;
</code></pre>
<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://pcsdata.baidu.com/thumbnail/d1c28a5b0j82e7257c2dc800f18f3d72?fid=1727042680-16051585-157243902181807&rt=pr&sign=FDTAER-yUdy3dSFZ0SVxtzShv1zcMqd-BCQEKI+3FQPO12yiaEtY2ctG/a0=&expires=2h&chkv=0&chkbd=0&chkpc=&dp-logid=478342041056269400&dp-callid=0&time=1636981200&bus_no=26&size=c1600_u1600&quality=100&vuk=-&ft=video"></p>
]]></content>
      <categories>
        <category>十一届校选拔</category>
      </categories>
  </entry>
  <entry>
    <title>15.125GB</title>
    <url>/2021/11/15/%E5%8D%81%E4%B8%80%E5%B1%8A%E6%A0%A1%E9%80%89%E6%8B%94/15.125GB/</url>
    <content><![CDATA[<p>【问题描述】<br>在计算机存储中，15.125GB是多少MB？<br>【答案提交】<br>这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。<br><br><br></p>


<h3 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析：  "></a>问题分析：  <br></h3><p>  1G=1024MB</p>
<h3 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h3><pre><code>#include &lt;stdio.h&gt;
#define N 15.125
int main()
&#123;
    double res;
    
    res = 15*N;
    
    printf(&quot;%lf&quot;, res);
    
    return 0;
&#125;
</code></pre>
<h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h4><p><img src="https://pcsdata.baidu.com/thumbnail/6db5ff82cge8ef24d20374423c0fd1a2?fid=1727042680-16051585-986783983655615&rt=pr&sign=FDTAER-yUdy3dSFZ0SVxtzShv1zcMqd-TP+gUVrNX41KMYia0gQ7oA9XUB0=&expires=2h&chkv=0&chkbd=0&chkpc=&dp-logid=474077148316507049&dp-callid=0&time=1636963200&bus_no=26&size=c1600_u1600&quality=100&vuk=-&ft=video"></p>
]]></content>
      <categories>
        <category>十一届校选拔</category>
      </categories>
  </entry>
  <entry>
    <title>数位递增数</title>
    <url>/2021/11/15/%E5%8D%81%E4%B8%80%E5%B1%8A%E6%A0%A1%E9%80%89%E6%8B%94/%E6%95%B0%E4%BD%8D%E9%80%92%E5%A2%9E%E6%95%B0/</url>
    <content><![CDATA[<p>【问题描述】<br>一个正整数如果任何一个数位不大于右边相邻的数位，则称为一个数位递增的数，例如1135是一个数位递增的数，而1024不是一个数位递增的数。<br>给定正整数 n，请问在整数 1 至 n 中有多少个数位递增的数？<br>【输入格式】<br>输入的第一行包含一个整数 n。<br>【输出格式】<br>输出一行包含一个整数，表示答案。<br>【样例输入】<br>30<br>【样例输出】<br>26<br>【评测用例规模与约定】<br>对于 40% 的评测用例，1 &lt;= n &lt;= 1000。<br>对于 80% 的评测用例，1 &lt;= n &lt;= 100000。<br>对于所有评测用例，1 &lt;= n &lt;= 1000000。<br><br><br></p>


<h3 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析：  "></a>问题分析：  <br></h3><p>  由题意可知，一个数，从左到右每位依次增大或从右到左依次减小的数属于数位递增数 <br></p>
<h3 id="算法设计"><a href="#算法设计" class="headerlink" title="算法设计:  "></a>算法设计:  <br></h3><p>  所以我们可以按照题目思路，依次从左到右，或者从右到左分别取每个数然后比较即可，所以我们可以声明一个函数专门来做这个比较的操作。<br></p>
<h3 id="程序实现："><a href="#程序实现：" class="headerlink" title="程序实现： "></a>程序实现： <br></h3><pre><code>#include &lt;stdio.h&gt;

int p_qu(int num);        //函数声明 

int main()
&#123;
    int num;
    scanf(&quot;%d&quot;, &amp;num);
    if(p_qu(num))
        printf(&quot;是递增数&quot;);
    else
        printf(&quot;不是递增数&quot;);
    
    return 0;    
&#125;

int p_qu(int num)        //函数定义(作用：从右往左比较)
&#123;
    int n, t;
    
    if(num &lt; 10)        //个位都为数位递增数 
        return true;
    while(num)
    &#123;
         n = num%10;    //n用来表示最后一位数 
         num /= 10;        //将num/10来去掉最后一位 
         t = num%10;    //t用来表示倒数第二位数 
        if(n &gt; t)        //比较n与t的大小，因为从右往左比较，所以递减，最后一个数比倒数第二个大 
            return true;
        else
            return false;
    &#125;
&#125;
</code></pre>
<p>到此本题结束</p>
]]></content>
      <categories>
        <category>十一届校选拔</category>
      </categories>
  </entry>
  <entry>
    <title>函数程序设计</title>
    <url>/2021/11/15/C%E8%AF%AD%E8%A8%80/%E5%87%BD%E6%95%B0%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h3 id="基本任务一："><a href="#基本任务一：" class="headerlink" title="基本任务一："></a>基本任务一：</h3><p>函数的定义和调用等; 编写判断一个正整数是否是素数的函数，并在主函数中调用它测试输入某个整数的结果</p>
<h4 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析："></a>问题分析：</br></h4><p><strong>素数：</strong>只能被1和自己整除的数 </br><br><strong>素数判断方法：</strong>一个数x，从2除到根号x，没有能被整除的数，那么x就为素数</p>
<pre><code>#include &lt;stdio.h&gt;
#include &lt;math.h&gt;

int p_ss(int x);    //函数声明

int main()
&#123;
    int a;
    printf(&quot;请输入一个数: &quot;);
    scanf(&quot;%d&quot;, &amp;a);
    if(p_ss(a))
        printf(&quot;%d是素数\n&quot;, a);
    
    return 0;
&#125;

int p_ss(x)        //函数定义，形参为x
&#123;
    int i, k;
    k = (int)sqrt(x);    //开平方
    for(i=2;i&lt;=k;i++)    //判断2-根号x能否被x整除
        if(x%i==0)
            return 0;    //有除数返回0
    return 1;            //无除数返回1
&#125;
</code></pre>
<h3 id="基本任务二："><a href="#基本任务二：" class="headerlink" title="基本任务二："></a>基本任务二：</h3><p>数组名作为函数的参数；编写一个函数，求n个人的平均成绩，并调用它求主函数中10个学生的平均成绩; 要求用数组名作为函数的参数</p>
<h4 id="问题分析：-1"><a href="#问题分析：-1" class="headerlink" title="问题分析："></a>问题分析：</br></h4><p><strong>1.函数声明</strong>注意形参为(类型 数组) eg(int a[10])<br><br><strong>2.函数定义</strong>注意形参为(类型 数组) eg(int a[10])</p>
<pre><code>#include &lt;stdio.h&gt;
#define N 10

int p_ave(int list[N]);        //函数声明

int main()
&#123;
    int a[N], i;
    for(i=0;i&lt;N;i++)
        scanf(&quot;%d&quot;, &amp;a[i]);
    printf(&quot;平均成绩为: %d\n&quot;, p_ave(a)/N);    //sum/N求平均值
    return 0;
&#125;

int p_ave(int list[N])        //函数定义
&#123;
    int i, sum;
    sum = 0;
    for(i=0;i&lt;N;i++)        //累加数组每个数求和
        sum += list[i];
    return sum;                //返回函数值为sum的值
&#125;
</code></pre>
<h3 id="基本任务三："><a href="#基本任务三：" class="headerlink" title="基本任务三："></a>基本任务三：</h3><p>递归函数的定义和调用；采用递归方法输出斐波那契数列的第7项；</p>
<h4 id="问题分析：-2"><a href="#问题分析：-2" class="headerlink" title="问题分析："></a>问题分析：</br></h4><p><strong>函数的调用及返回：</strong><br><br>A(), B(), C(), D()四个函数<br></p>
<p>调用过程：<br><br><strong>操作系统 -&gt; 主函数main() -&gt; A() -&gt; B() -&gt; C() -&gt; D()</strong> <br><br>返回过程:<br><br><strong>操作系统 &lt;- 主函数main() &lt;- A() &lt;- B() &lt;- C() &lt;- D()</strong></p>
<p>例如递归求阶乘,5!可以化做: <br></p>
<p>5！ = 5*4！<br><br>4！ = 4*3！<br><br>3！ = 3*2！<br><br>2！ = 2*1！<br><br>1！ = 1*0！<br><br>0！ = 1          <br></p>
<p>所以我们可以定义一个函数f(n)表示一个数的阶乘，0或1为函数的出口；<br></p>
<p>所以阶乘递归公式就为<br></p>
<pre><code>       1        (n=0或n=1)
f(n) = n*f(n-1)    (n&gt;=2)
</code></pre>
<p>根据函数的返回过程可以知道，执行了最后一步后会依次返回执行后面的操作。如图：<br><br><img src="https://pcsdata.baidu.com/thumbnail/265b662eckfea986068eadac1212c1be?fid=1727042680-16051585-547120909869549&rt=pr&sign=FDTAER-yUdy3dSFZ0SVxtzShv1zcMqd-wXcLeAY480rQQVghTKYSkbUV5js=&expires=2h&chkv=0&chkbd=0&chkpc=&dp-logid=413859461974693964&dp-callid=0&time=1636740000&bus_no=26&size=c1600_u1600&quality=100&vuk=-&ft=video"></p>
<p>同理斐波那契数列：1 1 2 3 5 8 13 第七项为13，我们可以定义一个函数f(n)表示第n个斐波那契函数，然后将第一个和第二个数作为递归函数的出口即可</p>
<p>斐波那契的递归公式就能轻易推倒了:<br></p>
<pre><code>            1                (n=1或n=2)
    f(n) =  f(n-1) + f(n-2)    (n&gt;2)
</code></pre>
<br>


<pre><code>#include&lt;stdio.h&gt;

int fib(int n);        //函数声明

int main()
&#123;
    int a, num;
    scanf(&quot;%d&quot;, &amp;a);
    num = fib(a);
    
    printf(&quot;num = %d\n&quot;, num);
    return 0;
&#125;

int fib(int n)
&#123;
    if(n==1 || n==2)    //函数出口
        return 1;
    else
        return (fib(n-1) + fib(n-2));    //递归函数
&#125;
</code></pre>
<br>

<p>到此，函数程序设计结束！</p>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>常用极限</title>
    <url>/2021/11/15/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E5%B8%B8%E7%94%A8%E6%9E%81%E9%99%90/</url>
    <content><![CDATA[<p>常用极限等价：<br></p>
<h4 id="x-gt-0时"><a href="#x-gt-0时" class="headerlink" title="x-&gt;0时"></a>x-&gt;0时</h4><p><img src="https://pcsdata.baidu.com/thumbnail/7966275a6q6c0b8df2e34571334cbee3?fid=1727042680-16051585-808114864969382&rt=pr&sign=FDTAER-yUdy3dSFZ0SVxtzShv1zcMqd-nBs0GBBNpk5VScpJ/7/F7Ad+dIY=&expires=2h&chkv=0&chkbd=0&chkpc=&dp-logid=502290689636419739&dp-callid=0&time=1637071200&bus_no=26&size=c1600_u1600&quality=100&vuk=-&ft=video"><br><img src="https://pcsdata.baidu.com/thumbnail/94d05ead3if5f0846b2cdcfc3399c691?fid=1727042680-16051585-287687000532671&rt=pr&sign=FDTAER-yUdy3dSFZ0SVxtzShv1zcMqd-wRY1iTJ/nsIG0aqSXSTAKl9kbJM=&expires=2h&chkv=0&chkbd=0&chkpc=&dp-logid=502290689636419739&dp-callid=0&time=1637071200&bus_no=26&size=c1600_u1600&quality=100&vuk=-&ft=video"><br><br><br><img src="https://pcsdata.baidu.com/thumbnail/a3d313d69s6e7f0de29472bf5649a780?fid=1727042680-16051585-185235514418237&rt=pr&sign=FDTAER-yUdy3dSFZ0SVxtzShv1zcMqd-0xDvMjyZ9qrTVx1A1UhPoQMC6Y4=&expires=2h&chkv=0&chkbd=0&chkpc=&dp-logid=502318205974971347&dp-callid=0&time=1637071200&bus_no=26&size=c1600_u1600&quality=100&vuk=-&ft=video"></p>
]]></content>
      <categories>
        <category>高等数学</category>
      </categories>
  </entry>
</search>
